{"version":3,"sources":["images/c.svg","hooks.js","components/Connect.js","components/Login.js","components/Info.js","components/Virus.js","components/Arena.js","components/Game.js","components/App.js","index.js","images sync /^/.//.*$","images/a.svg","images/b.svg"],"names":["module","exports","playersTemplate","p1","p2","className","partialTemplate","me","player","sec","time","toFixed","join","resultsTemplate","results","res","filter","Boolean","my","r","length","theirs","Connect","Spinner","animation","role","Login","socket","submit","evt","a","preventDefault","name","target","elements","namedItem","value","emit","Form","onSubmit","Control","type","placeholder","autoComplete","autoFocus","Button","variant","Info","end","children","onClick","ctx","require","urls","keys","map","Virus","x","y","styles","backgroundImage","left","VIRUS_SIZE","top","width","height","style","memo","virus","setVirus","stopTimer","onMouseDown","rect","currentTarget","getBoundingClientRect","clientX","clientY","Math","sqrt","TransitionGroup","CSSTransition","timeout","classNames","Game","info","animated","setAnimated","SCOPE_RADIUS","formattedTime","onAnimationIteration","msg","opacity","App","useState","setSocket","setName","setInfo","players","useRef","ctrl","useMemo","waitMsg","playersMsg","opponent","current","partialMsg","setTimeout","resultsMsg","closeInfo","useInfo","setTime","refs","getElapsed","performance","now","startTime","startTimer","interval","setInterval","clearInterval","elapsed","resetTimer","useTimer","listeners","joined","inuse","alert","wait","ready","start","miss","partial","useEffect","io","on","emitter","dependencies","Object","entries","forEach","key","val","addEventListener","removeEventListener","useListeners","ReactDOM","render","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,+B,+KC8GrCC,EAAkB,SAAC,GAAD,uBAAEC,EAAF,KAAMC,EAAN,YACtB,oCACGD,EAAG,0BAAME,UAAU,eAAhB,QAA0CD,IAI5CE,EAAkB,SAAC,EAAkBC,GAAQ,IAAxBC,EAAuB,EAAvBA,OACnBC,GAD0C,EAAfC,KACb,KAAMC,QAAQ,GAElC,OACE,0BAAMN,UAAWE,IAAOC,EAAS,eAAiB,eAE9C,CAACA,EAAQC,GAAKG,KAAK,MAAQ,SAM7BC,EAAkB,SAACC,EAASP,GAChC,IAAMQ,EAAMD,EAAQE,OAAOC,SACzBC,EAAKH,EAAIC,QAAO,SAAAG,GAAC,OAAIA,EAAEX,SAAWD,KAAIa,OACtCC,EAASN,EAAIK,OAASF,EAExB,OAAIA,EAAKG,EACD,cAAN,OAAqBH,EAArB,YAA2BG,EAA3B,iBACSA,EAASH,EACZ,eAAN,OAAsBG,EAAtB,YAAgCH,GAE5B,Q,SC9HOI,G,MARC,kBACd,yBAAKjB,UAAU,WACb,kBAACkB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMpB,UAAU,WAAhB,qB,2CCmBSqB,G,MAtBD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAETC,EAAM,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sDACbD,EAAIE,iBACEC,EAAOH,EAAII,OAAOC,SAASC,UAAU,QAAQC,MACnDT,EAAOU,KAAK,OAAQL,GAHP,2CAAH,sDAMZ,OACE,yBAAK3B,UAAU,SACb,wBAAIA,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,UADF,WAGA,kBAACiC,EAAA,EAAD,CAAMjC,UAAU,cAAckC,SAAUX,GACtC,kBAACU,EAAA,EAAKE,QAAN,CAAcnC,UAAU,OAAOoC,KAAK,OAClCC,YAAY,OAAOV,KAAK,OAAOW,aAAa,MAAMC,WAAW,IAC/D,kBAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,WAA9B,YCDOC,G,MAfF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,SAAUtB,EAAa,EAAbA,OAK7B,OACE,yBAAKtB,UAAU,QACb,uBAAGA,UAAU,WAAW4C,GAEtBD,GAAO,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUI,QARrB,WAChBvB,EAAOU,KAAK,gBAOD,iBCPbc,G,MAAMC,OAENC,EADOF,EAAIG,OACCC,IAAIJ,GAgBHK,EAdD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,EAAGZ,EAAc,EAAdA,QACfa,EAAS,CACbC,gBAAgB,OAAD,OAASP,EAAKP,GAAd,KACfe,KAAMJ,EAAIK,GACVC,IAAKL,EAAII,GACTE,MAZe,IAafC,OAbe,KAgBjB,OACE,yBAAK5D,UAAU,QAAQ6D,MAAOP,K,2BCmBnBQ,kBAhCD,SAAC,GAA4C,IAA1CxC,EAAyC,EAAzCA,OAAQyC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAiBxC,OACE,yBAAKjE,UAAU,QAAQkE,YAhBP,SAAA1C,GAChB,GAAKuC,EAAL,CAGA,IAAMI,EAAO3C,EAAI4C,cAAcC,wBAC7BjB,EAAI5B,EAAI8C,QAAUH,EAAKf,EACvBC,EAAI7B,EAAI+C,QAAUJ,EAAKd,EACnBmB,KAAKC,KAAK,SAACV,EAAMX,EAAIA,EAAM,GAAjB,SAAsBW,EAAMV,EAAIA,EAAM,IAE9CI,KACNnC,EAAOU,KAAK,QAASiC,KACrBD,EAAS,UAMT,kBAACU,EAAA,EAAD,KAEIX,GACA,kBAACY,EAAA,EAAD,CAAeC,QAAS,IAAKC,WAAW,SACtC,kBAAC,EAAUd,SCWRe,G,OAlCF,SAAC,GAA+E,IAA7ExD,EAA4E,EAA5EA,OAAQyD,EAAoE,EAApEA,KAAMhB,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,UAAW5D,EAAkC,EAAlCA,KAAM2E,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAItE3B,EAAS,CACPK,MAHSuB,IAITtB,OAJSsB,KAWXC,GAAiB9E,EAAO,KAAMC,QAAQ,GAExC,OACE,yBAAKN,UAAWgF,EAAW,gBAAkB,QAC3C,yBAAKhF,UAAU,QAAQ6D,MAAOP,EAC5B8B,qBATiB,WACnBL,GAAQE,GAAY,KASlB,yBAAKjF,UAAU,MAEX+E,EACI,kBAAC,EAAD,CAAMpC,IAAKoC,EAAKpC,IAAKrB,OAAQA,GAASyD,EAAKM,KAC3C,kBAAC,EAAU,CAAE/D,SAAQyC,QAAOC,WAAUC,gBAIhD,uBAAGjE,UAAU,mBAAmB6D,MAAO,CAAEyB,QAASjF,EAAO,EAAI,IAC1D8E,MCoDMI,EAhFH,WAAO,IAAD,EACYC,qBADZ,mBACTlE,EADS,KACDmE,EADC,OAEID,qBAFJ,mBAEb7D,EAFa,KAEP+D,EAFO,OPuDK,WAAO,IAAD,EACHF,qBADG,mBACpBT,EADoB,KACdY,EADc,KAEzBC,EAAUC,mBAENC,EAAOC,mBAAQ,iBAAO,CAE1BC,QAF0B,WAGxBL,EAAQ,CAAEN,IAAK,gCAIjBY,WAP0B,SAOf/F,EAAIgG,GACbN,EAAQO,QAAU,CAACjG,EAAIgG,GACvB,IAAMb,EAAMxF,EAAgB+F,EAAQO,SAEpCR,EAAQ,CAAEN,SAIZe,WAf0B,SAef3F,GAET,IAAM4E,EAAMpF,EAAgBQ,EAASmF,EAAQO,QAAQ,IAErDE,YAAW,WACTV,EAAQ,CAAEN,UACT,MAILiB,WAzB0B,SAyBf7F,GACTkF,EAAQ,CACNN,IAAK7E,EAAgBC,EAASmF,EAAQO,QAAQ,IAC9CxD,KAAK,KAKT4D,UAjC0B,WAkCxBZ,EAAQ,UAGR,CAACA,EAASC,IAEd,OAAO,aAAEb,QAASe,GO9FwBU,GADtCzB,EAHY,EAGZA,KAAMiB,EAHM,EAGNA,QAASC,EAHH,EAGGA,WACfG,EAJY,EAIZA,WAAYE,EAJA,EAIAA,WAAYC,EAJZ,EAIYA,UAJZ,EPcM,WAAO,IAAD,EACJf,mBAAS,GADL,mBACrBnF,EADqB,KACfoG,EADe,KAEtBC,EAAOb,iBAAO,IAEdc,EAAa,kBAAMC,YAAYC,MAAQH,EAAKP,QAAQW,WAEpDhB,EAAOC,mBAAQ,iBAAO,CAC1BgB,WAD0B,WAExBL,EAAKP,QAAQW,UAAYF,YAAYC,MAErCH,EAAKP,QAAQa,SAAWC,aAAY,WAClCR,EAAQE,OACP,IAEHF,EAAQ,IAGVxC,UAX0B,WAWb,IACH+C,EAAaN,EAAKP,QAAlBa,SACR,IAAKA,EAAU,OAAO,EAEtBE,cAAcF,GACdN,EAAKP,QAAQa,SAAW,KAExB,IAAMG,EAAUR,IAEhB,OADAF,EAAQU,GACDA,GAGTC,WAvB0B,WAwBxBF,cAAcR,EAAKP,QAAQa,UAC3BN,EAAKP,QAAQa,SAAW,KACxBP,EAAQ,OAGR,CAACC,EAAMD,IAEX,OAAO,aAAEpG,QAASyF,GO9C8BuB,GAA5ChH,EALY,EAKZA,KAAM0G,EALM,EAKNA,WAAY9C,EALN,EAKMA,UAAWmD,EALjB,EAKiBA,WALjB,EAMM5B,qBANN,mBAMbzB,EANa,KAMNC,EANM,OAOYwB,qBAPZ,mBAObR,EAPa,KAOHC,EAPG,KASdqC,EAAY,CACVC,OADU,SACH5F,GACL+D,EAAQ/D,IAGV6F,MALU,WAMRC,MAAM,gBAGRC,KATU,WAUR1B,IACAoB,KAGFO,MAdU,SAcJzB,GACJD,EAAWtE,EAAMuE,IAGnB0B,MAlBU,WAmBR3C,GAAY,GACZsB,IACAa,KAGFrD,MAxBU,SAwBJA,GACJgD,IACA/C,EAASD,IAGX8D,KA7BU,WA8BRT,IACApD,EAAS,OAGX8D,QAlCU,SAkCFrH,GACNwD,IACAD,EAAS,MACToC,EAAW3F,IAGbA,QAxCU,SAwCFA,GACN2G,IACApD,EAAS,MACTsC,EAAW7F,KAcjB,OAVAsH,qBAAU,WACR,IAAMzG,EAAS0G,MACf1G,EAAO2G,GAAG,WAAW,kBAAMxC,EAAUnE,QACpC,CAACmE,IP/DsB,SAACyC,EAASZ,EAAWa,GAG/CJ,qBAAU,WAKR,OAJAG,GAAWE,OAAOC,QAAQf,GAAWgB,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAATC,EAAS,KAC3DN,EAAQO,iBAAiBF,EAAKC,MAGzB,WACLN,GAAWE,OAAOC,QAAQf,GAAWgB,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAATC,EAAS,KAC3DN,EAAQQ,oBAAoBH,EAAKC,SAP9B,CAWLN,GAXK,mBAWOC,KOmDhBQ,CAAarH,EAAQgG,EAAW,CAC9B3F,EAAMqE,EAASe,EAAYd,EAAYhB,EAAaS,EACpDa,EAAWtC,EAAWmD,EAAYhB,EAAYE,EAAYtC,IAGrD1C,EACHK,EAEA,kBAAC,EAAS,CACRL,SAAQyD,OAAMhB,QAAOC,WACrBC,YAAW5D,OAAM2E,WAAUC,gBAG3B,kBAAC,EAAW,CAAE3D,WAEhB,kBAAC,EAAD,OC7ENsH,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U,oLCR1B,IAAI7F,EAAM,CACT,UAAW,GACX,UAAW,GACX,UAAW,KAIZ,SAAS8F,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEnG,EAAK+F,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOpG,EAAI+F,GAEZD,EAAe/F,KAAO,WACrB,OAAOmF,OAAOnF,KAAKC,IAEpB8F,EAAeS,QAAUN,EACzBxJ,EAAOC,QAAUoJ,EACjBA,EAAeE,GAAK,I,mBCxBpBvJ,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.19574fd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/c.8108d445.svg\";","import React, { useEffect, useState, useMemo, useRef } from 'react';\n\n// Hook that deals with responding to events by key/value lookup\nexport const useListeners = (emitter, listeners, dependencies) => {\n  // Connect to websocket endpoint on mount and disconnect on unmount\n  \n  useEffect(() => {\n    emitter && Object.entries(listeners).forEach(([key, val]) => {\n      emitter.addEventListener(key, val);\n    });\n\n    return () => {\n      emitter && Object.entries(listeners).forEach(([key, val]) => {\n        emitter.removeEventListener(key, val);\n      });\n    };\n\n  }, [emitter, ...dependencies]);\n}\n\n// Timer hook\nexport const useTimer = () => {\n  const [time, setTime] = useState(0);\n  const refs = useRef({});\n\n  const getElapsed = () => performance.now() - refs.current.startTime;\n\n  const ctrl = useMemo(() => ({\n    startTimer() {\n      refs.current.startTime = performance.now();\n\n      refs.current.interval = setInterval(() => {\n        setTime(getElapsed());\n      }, 50);\n\n      setTime(0);\n    },\n\n    stopTimer() {\n      const { interval } = refs.current;\n      if (!interval) return false;\n\n      clearInterval(interval);\n      refs.current.interval = null;\n\n      const elapsed = getElapsed();\n      setTime(elapsed);\n      return elapsed;\n    },\n\n    resetTimer() {\n      clearInterval(refs.current.interval);\n      refs.current.interval = null;\n      setTime(0);\n    }\n\n  }), [refs, setTime]);\n\n  return { time, ...ctrl };\n}\n\n// Hook to deal with messages\nexport const useInfo = () => {\n  const [info, setInfo] = useState(),\n    players = useRef();\n\n  const ctrl = useMemo(() => ({\n    // Display waiting notification\n    waitMsg() {\n      setInfo({ msg: 'Waiting for a contender...' });\n    },\n\n    // Display players\n    playersMsg(me, opponent) {\n      players.current = [me, opponent];\n      const msg = playersTemplate(players.current);\n\n      setInfo({ msg });\n    },\n\n    // Display partial results\n    partialMsg(results) {\n      // Delay display to sync with virus fade transition\n      const msg = partialTemplate(results, players.current[0]);\n\n      setTimeout(() => {\n        setInfo({ msg });\n      }, 200);\n    },\n\n    // Display end results\n    resultsMsg(results) {\n      setInfo({\n        msg: resultsTemplate(results, players.current[0]),\n        end: true\n      });\n    },\n\n    // Close info and show game board\n    closeInfo() {\n      setInfo(null);\n    }\n\n  }), [setInfo, players]);\n\n  return { info, ...ctrl };\n};\n\n// Text templetes\n\nconst playersTemplate = ([p1, p2]) =>\n  <>\n    {p1}<span className=\"text-danger\"> VS </span>{p2}\n  </>\n;\n\nconst partialTemplate = ({ player, time }, me) => {\n  const sec = (time / 1000).toFixed(2);\n\n  return (\n    <span className={me === player ? 'text-primary' : 'text-danger'}>\n      {\n        [player, sec].join(': ') + ' sec'\n      }\n    </span>\n  );\n};\n\nconst resultsTemplate = (results, me) => {\n  const res = results.filter(Boolean),\n    my = res.filter(r => r.player === me).length,\n    theirs = res.length - my;\n\n  if (my > theirs) {\n    return `You win by ${my}-${theirs} 🎉`;\n  } else if (theirs > my) {\n    return `You lose by ${theirs}-${my}`;\n  }\n  return `Draw`;\n};\n\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './Connect.css';\n\nconst Connect = () =>\n  <div className=\"connect\">\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Connecting...</span>\n    </Spinner>\n  </div>\n;\n\nexport default Connect;","import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './Login.css';\n\nconst Login = ({ socket }) => {\n\n  const submit = async evt => {\n    evt.preventDefault();\n    const name = evt.target.elements.namedItem('nick').value;\n    socket.emit('join', name);\n  };\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"display-4 mb-5\">\n        <span className=\"text-danger\">CORONA</span> HUNTER\n      </h1>\n      <Form className=\"form-inline\" onSubmit={submit}>\n        <Form.Control className=\"mr-2\" type=\"text\" \n          placeholder=\"Nick\" name=\"nick\" autoComplete=\"off\" autoFocus={true} />\n        <Button type=\"submit\" variant=\"primary\">Play</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport './Info.css';\n\nconst Info = ({ end, children, socket }) => {\n  const playAgain = () => {\n    socket.emit('play-again');\n  };\n\n  return (\n    <div className=\"info\">\n      <p className=\"message\">{children}</p>\n      {\n        end && <Button variant=\"primary\" onClick={playAgain}>Play again</Button>\n      }\n    </div>\n  )\n};\n\nexport default Info;","import React from 'react';\nimport './Virus.css';\n\nconst VIRUS_SIZE = 100,\n\n// Get virus svg-urls\n  ctx = require.context('../images'),\n  keys = ctx.keys(),\n  urls = keys.map(ctx);\n\nconst Virus = ({ x, y, variant }) => {  \n  const styles = { \n    backgroundImage: `url(${urls[variant]})`,\n    left: x - VIRUS_SIZE / 2,\n    top: y - VIRUS_SIZE / 2,\n    width: VIRUS_SIZE,\n    height: VIRUS_SIZE\n  };\n\n  return (\n    <div className=\"virus\" style={styles} />\n  );\n};\n\nexport default Virus;","import React, { memo } from 'react';\nimport Virus from './Virus';\nimport './Arena.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst VIRUS_SIZE = 100;\n\nconst Arena = ({ socket, virus, setVirus, stopTimer }) => {\n\n  const mouseDown = evt => {\n    if (!virus) return;\n\n    // Emit if hit\n    const rect = evt.currentTarget.getBoundingClientRect(),\n      x = evt.clientX - rect.x,\n      y = evt.clientY - rect.y,\n      d = Math.sqrt((virus.x - x) ** 2 + (virus.y - y) ** 2);\n\n    if (d < VIRUS_SIZE / 2) {\n      socket.emit('click', stopTimer());\n      setVirus(null);\n    }\n  };\n\n  return (\n    <div className=\"arena\" onMouseDown={mouseDown}>\n      <TransitionGroup>\n        {\n          virus &&\n          <CSSTransition timeout={200} classNames=\"virus\">\n            <Virus {...virus} />\n          </CSSTransition>\n        }\n      </TransitionGroup>\n    </div>\n  );\n}\n\n// Momoize component to prevent rerender each timer update on parent\nexport default memo(Arena);","import React from 'react';\nimport Info from './Info';\nimport Arena from './Arena';\nimport './Game.scss';\n\nconst SCOPE_RADIUS = 300;\n\nconst Game = ({ socket, info, virus, setVirus, stopTimer, time, animated, setAnimated }) => {\n\n  const size = SCOPE_RADIUS * 2,\n\n    styles = {\n      width: size,\n      height: size\n    },\n\n    animationIteration = () => {\n      info && setAnimated(false);\n    },\n\n    formattedTime = (time / 1000).toFixed(2);\n\n  return (\n    <div className={animated ? 'game animated' : 'game'}>\n      <div className=\"scope\" style={styles}\n        onAnimationIteration={animationIteration}>\n        <div className=\"bg\">\n          {\n            info\n              ? <Info end={info.end} socket={socket}>{info.msg}</Info>\n              : <Arena {...{ socket, virus, setVirus, stopTimer }} />\n          }\n        </div>\n      </div>\n      <p className=\"text-white timer\" style={{ opacity: time ? 1 : 0 }}>\n        {formattedTime}\n      </p>\n    </div>\n  )\n}\n\nexport default Game;","import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useListeners, useInfo, useTimer } from '../hooks';\nimport Connect from './Connect';\nimport Login from './Login';\nimport Game from './Game';\n\nconst App = () => {\n  const [socket, setSocket] = useState(),\n    [name, setName] = useState(),\n    { info, waitMsg, playersMsg,\n      partialMsg, resultsMsg, closeInfo } = useInfo(),\n    { time, startTimer, stopTimer, resetTimer } = useTimer(),\n    [virus, setVirus] = useState(),\n    [animated, setAnimated] = useState(),\n\n    listeners = {\n      joined(name) {\n        setName(name)\n      },\n\n      inuse() {\n        alert('Nick in use');\n      },\n\n      wait() {\n        waitMsg();\n        resetTimer();\n      },\n\n      ready(opponent) {\n        playersMsg(name, opponent);\n      },\n\n      start() {\n        setAnimated(true);\n        closeInfo();\n        resetTimer();\n      },\n\n      virus(virus) {\n        startTimer();\n        setVirus(virus);\n      },\n\n      miss() {\n        resetTimer();\n        setVirus(null);\n      },\n\n      partial(results) {\n        stopTimer();\n        setVirus(null);\n        partialMsg(results);\n      },\n\n      results(results) {\n        resetTimer();\n        setVirus(null);\n        resultsMsg(results);\n      }\n    };\n\n  useEffect(() => {\n    const socket = io();\n    socket.on('connect', () => setSocket(socket));\n  }, [setSocket]);\n\n  useListeners(socket, listeners, [\n    name, waitMsg, startTimer, playersMsg, setAnimated, setName,\n    closeInfo, stopTimer, resetTimer, partialMsg, resultsMsg, setVirus\n  ]);\n\n  return socket\n    ? name\n      ?\n      <Game {...{\n        socket, info, virus, setVirus,\n        stopTimer, time, animated, setAnimated\n      }} />\n\n      : <Login {... { socket }} />\n\n    : <Connect />\n  ;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","var map = {\n\t\"./a.svg\": 98,\n\t\"./b.svg\": 99,\n\t\"./c.svg\": 100\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97;","module.exports = __webpack_public_path__ + \"static/media/a.e012df60.svg\";","module.exports = __webpack_public_path__ + \"static/media/b.0a5e7c1e.svg\";"],"sourceRoot":""}